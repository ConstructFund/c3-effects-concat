{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?4a62","webpack:///./src/App.vue?3d22","webpack:///src/App.vue","webpack:///./src/App.vue?60d0","webpack:///./src/App.vue?5a89","webpack:///./src/plugins/vuetify.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","render","_vm","this","_h","$createElement","_c","_self","staticStyle","attrs","ref","on","onFileChange","staticClass","model","callback","$$v","addons","expression","_l","element","id","_v","_s","onGenerate","staticRenderFns","components","draggable","processedEffects","commonUniforms","commonUniformsToRemove","methods","Promise","files","fx","lang","loadAsync","file","then","zip","promises","relativePath","async","content","addon","found","catch","err","console","JSON","type","saveAs","processEffect","fxArr","trim","replace","precisionLines","line","newName","x","langContent","uniformParam","currentFunctionLines","nbOpenBrackets","isInFunction","functions","currentFunction","concatEffects","resultArr","list","isLastEffect","newMain","prevEffectFunction","concatData","version","website","documentation","resultData","map","reduce","horizontal","vertical","concatLang","languageTag","text","effects","join","description","params","component","VApp","VBtn","VFileInput","VLayout","VMain","Vue","use","Vuetify","config","productionTip","vuetify","h","App","$mount"],"mappings":"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ACA,eAEA,4BACAzB,iBAEA,MACA,iBAEA,uBAIA0B,MAAAC,IACAC,oBAMAV,KAAA,KAIA,wBACA,2BAIAd,aACA,cAEAe,OACA,YACA,8CAEA,gDACAA,8CACAA,OACA,kBACAU,eACA,0CACA,KACA,IAIAV,iBAAAW,cAAA,SACAC,0CAGAC,iBACA,WACA,SACA,SACA,OACA,wBACA,8BACA,iBAEAxB,QACA,oBAEAyB,WACA,EACAC,OACAC,QAAA,aACAD,QAGAD,cACA,YAIA,kBACA,2BAGAG,cACA,mBACA,OACA,uBACA,6CACAH,WACA,4BAIAA,eACA,2BAIAA,eACA,eAGAzB,0BACA,yBAGAyB,eACA,yBAGAzB,gCACA6B,IAEA,mBACA,gCACA,cACAA,iBAEAJ,WACA,aACA,sCACAK,IAIA,wBACAC,kBAEA,MACA,MACAC,2CACAC,aAGA,2CACAA,MAEA,IACAA,oBACAA,aAGAD,2CACAC,MACA1B,OAEAa,gDAEA,WAIApB,yBACA,yBAGAA,8BACA6B,IAEA,mBACA,OACA,4BASA,OARAA,iBAEAJ,WACA,aACA,sCACAK,IAGA,IAKAL,eACA,yBAEAzB,0BAGA,SACA,KACA,KACA,EACA,oEACA,IACA,KACAyB,cACA,MAEA,GADAS,UACA,kBACAC,IACA,QAEA,GADAC,KACA,YACA,kBACAF,WACA,mBAEAT,WACA,mBAEAY,YAEAA,YAEAH,KACAI,KAGA,iBACAH,IAGA,GACA,aACAC,KACA,oBACAE,gBACAJ,aAKAlC,iBAGAyB,eACA,uBACA,aACA,SAMAA,WACA,UAGAA,cACA,YAIA,YACAL,iDAIAmB,iBACA,SACA,wBACA,sBAEAC,cAEAA,WAGAC,cACA,WACAD,uBACAA,aAIAC,cACA,WACAD,sBACAA,aAIAC,cACA,WACAxH,qCACA,aAGAuH,2BACAA,gBAKA,SACA,KAqCA,OApCAC,kBACA,WACA,iBACAC,MAEA,uBAUA,GATA,SAEAC,WACA,aACA,0BACA,UAIA,GAEA,SACAC,YACAD,WACA,uBACA,aACA,sBACA,wCAGA,GAGAA,WACA,8CAGAH,cACAA,aAEA,cAGAK,cACA,OACA,iBACAvB,cACAwB,kBACAC,oCACAC,0CACA,0DAEA,0CAkDA,OAjDAC,oCACAA,8BACAA,4CACAA,cACA,gDAEAA,aACAC,IAAAlC,oBACAmC,OAAA,OACA,MACA,EAEA,QAEA9D,oBAEA4D,yBACAC,IAAAlC,gCACAmC,OAAA,OACA,KACA9D,gCACA4D,sBACAC,IAAAlC,6BACAmC,OAAA,OACA,KACA9D,6BACA4D,4BACAC,IAAAlC,mCACAmC,OAAA,OACA,KACA9D,mCACA4D,aACAC,IAAAlC,eACAmC,OAAA,OACA,KACA9D,eACA4D,kBACAC,IAAAlC,yBACAmC,OAAA,QACA,CACAC,+CACAC,2CAEAhE,yBACA4D,eACAC,IAAAlC,sBACAmC,OAAA,OACA,YACA,IACA,GAGAG,cACA,OACAC,oBACAC,MACAC,aAGA,0CACA,2BACAR,iCACArG,OACAsG,IAAAlC,iDACA0C,KAAA,OACAC,YACA,iDAEA,SAQA,OAPAtE,cACAuE,MACA,KACA,sDAGAX,6CACA,KCjjB8T,I,yGCQ1TY,EAAY,eACd,EACAxF,EACAwB,GACA,EACA,KACA,KACA,MAIa,EAAAgE,EAAiB,QAShC,IAAkBA,EAAW,CAACC,OAAA,KAAKC,OAAA,KAAKC,aAAA,KAAWC,UAAA,KAAQC,QAAA,O,gBCzB3DC,OAAIC,IAAIC,QAEO,UAAIA,OAAQ,ICD3BF,OAAIG,OAAOC,eAAgB,EAE3B,IAAIJ,OAAI,CACNK,UACAnG,OAAQoG,GAAKA,EAAEC,KACdC,OAAO,S","file":"js/app.cd9ca6ce.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-app',[_c('v-main',[_c('v-layout',{staticStyle:{\"margin\":\"10em\"},attrs:{\"column\":\"\",\"wrap\":\"\"}},[_c('v-file-input',{ref:\"fileInput\",attrs:{\"multiple\":\"\",\"chips\":\"\",\"label\":\"Add effect addons\"},on:{\"change\":_vm.onFileChange}}),_c('draggable',{staticClass:\"list-group\",attrs:{\"ghost-class\":\"ghost\"},model:{value:(_vm.addons),callback:function ($$v) {_vm.addons=$$v},expression:\"addons\"}},[_c('transition-group',_vm._l((_vm.addons),function(element){return _c('div',{key:element.id,staticClass:\"list-group-item\"},[_vm._v(\" \"+_vm._s(element.name)+\" \")])}),0)],1),_c('v-btn',{attrs:{\"color\":\"primary\",\"disabled\":!_vm.addons.length},on:{\"click\":_vm.onGenerate}},[_vm._v(\" Generate \")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-app>\n    <v-main>\n      <!-- file upload button -->\n      <v-layout column wrap style=\"margin: 10em\">\n        <v-file-input\n          multiple\n          chips\n          label=\"Add effect addons\"\n          @change=\"onFileChange\"\n          ref=\"fileInput\"\n        ></v-file-input>\n        <draggable v-model=\"addons\" class=\"list-group\" ghost-class=\"ghost\">\n          <transition-group>\n            <div\n              v-for=\"element in addons\"\n              :key=\"element.id\"\n              class=\"list-group-item\"\n            >\n              {{ element.name }}\n            </div>\n          </transition-group>\n        </draggable>\n        <!-- generate button -->\n        <v-btn color=\"primary\" @click=\"onGenerate\" :disabled=\"!addons.length\">\n          Generate\n        </v-btn>\n      </v-layout>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\nimport JSZip from \"jszip\";\nimport draggable from \"vuedraggable\";\nimport { saveAs } from \"file-saver\";\n\nexport default {\n  name: \"App\",\n\n  components: { draggable },\n\n  data: () => ({\n    addons: [],\n    processedEffects: {},\n    commonUniforms: [\n      \"varying mediump vec2 vTex;\",\n      \"uniform lowp sampler2D samplerFront;\",\n      \"uniform mediump vec2 srcStart;\",\n      \"uniform mediump vec2 srcEnd;\",\n      \"uniform mediump vec2 srcOriginStart;\",\n      \"uniform mediump vec2 srcOriginEnd;\",\n      \"uniform mediump vec2 layoutStart;\",\n      \"uniform mediump vec2 layoutEnd;\",\n      \"uniform lowp sampler2D samplerBack;\",\n      \"uniform lowp sampler2D samplerDepth;\",\n      \"uniform mediump vec2 destStart;\",\n      \"uniform mediump vec2 destEnd;\",\n      \"uniform highp float seconds;\",\n      \"uniform mediump vec2 pixelSize;\",\n      \"uniform mediump float pixelWidth;\",\n      \"uniform mediump float pixelHeight;\",\n      \"uniform mediump float layerScale;\",\n      \"uniform mediump float layerAngle;\",\n      \"uniform mediump float devicePixelRatio;\",\n    ],\n    commonUniformsToRemove: [\n      \"varying mediump vec2 vTex;\",\n      \"uniform lowp sampler2D samplerFront;\",\n      \"uniform mediump vec2 srcStart;\",\n      \"uniform mediump vec2 srcEnd;\",\n      \"uniform mediump vec2 srcOriginStart;\",\n      \"uniform mediump vec2 srcOriginEnd;\",\n      \"uniform mediump vec2 layoutStart;\",\n      \"uniform mediump vec2 layoutEnd;\",\n      \"uniform lowp sampler2D samplerBack;\",\n      \"uniform lowp sampler2D samplerDepth;\",\n      \"uniform mediump vec2 destStart;\",\n      \"uniform mediump vec2 destEnd;\",\n      \"uniform highp float seconds;\",\n      \"uniform mediump vec2 pixelSize;\",\n      \"uniform mediump float pixelWidth;\",\n      \"uniform mediump float pixelHeight;\",\n      \"uniform lowp float pixelWidth;\",\n      \"uniform lowp float pixelHeight;\",\n      \"uniform mediump float layerScale;\",\n      \"uniform mediump float layerAngle;\",\n      \"uniform mediump float devicePixelRatio;\",\n    ],\n  }),\n  methods: {\n    onFileChange(files) {\n      Promise.all(\n        files.map((file) => {\n          let zip = new JSZip();\n          let addon = {\n            name: file.name,\n            data: null,\n            id: \"\",\n            fx: null,\n            lang: null,\n          };\n          let found = 0;\n          return zip\n            .loadAsync(file.arrayBuffer())\n            .then(async (zip) => {\n              // get all files\n              let promises = [];\n              zip.forEach((relativePath) => {\n                // get all files\n                // get addon.json, effect.fx and lang/en-US.json\n                if (relativePath.includes(\"MACOSX\")) return;\n                if (relativePath.endsWith(\"addon.json\")) {\n                  promises.push(\n                    zip\n                      .file(relativePath)\n                      .async(\"string\")\n                      .then((content) => {\n                        // get addon.json and remove 1st char if it is \\ufeff\n                        let json = content.replaceAll(/\\ufeff/g, \"\");\n                        addon.data = JSON.parse(json);\n                        addon.id = addon.data.id;\n                        addon.name = addon.data.name;\n                      })\n                  );\n                  found++;\n                } else if (relativePath.endsWith(\"effect.fx\")) {\n                  promises.push(\n                    zip\n                      .file(relativePath)\n                      .async(\"string\")\n                      .then((content) => {\n                        addon.fx = content;\n                      })\n                  );\n                  found++;\n                } else if (relativePath.endsWith(\"lang/en-US.json\")) {\n                  promises.push(\n                    zip\n                      .file(relativePath)\n                      .async(\"string\")\n                      .then(function (content) {\n                        // get lang/en-US.json\n                        let json = content.replaceAll(/\\ufeff/g, \"\");\n                        addon.lang = JSON.parse(json);\n                      })\n                  );\n                  found++;\n                }\n              });\n\n              if (found === 3) {\n                await Promise.all(promises);\n                // if addons already contains addon, replace it\n                let index = this.addons.findIndex(\n                  (element) => element.id === addon.id\n                );\n                if (index !== -1) {\n                  this.addons[index] = addon;\n                } else {\n                  this.addons.push(addon);\n                }\n              }\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n          //clear file input\n          // console.log(this.$refs.fileInput);\n          // this.$refs.fileInput.value();\n        })\n      ).then(() => {\n        //clear file input\n        // console.log(this.$refs.fileInput);\n        // this.$refs.fileInput.value();\n        this.addons.forEach((addon) => {\n          this.processEffect(addon);\n        });\n      });\n    },\n    onGenerate() {\n      let zip = new JSZip();\n      // create effect.fx, addon.json and lang/en-US.json\n      zip.file(\n        \"effect.fx\",\n        this.concatEffects(this.addons.map((addon) => addon.id))\n      );\n      let addonJson = this.concatData(this.addons.map((addon) => addon.id));\n      zip.file(\"addon.json\", JSON.stringify(addonJson, null, 2));\n      zip.file(\n        \"lang/en-US.json\",\n        JSON.stringify(\n          this.concatLang(this.addons.map((addon) => addon.id)),\n          null,\n          2\n        )\n      );\n      // download zip\n      zip.generateAsync({ type: \"blob\" }).then((blob) => {\n        saveAs(blob, addonJson.id + \".c3Addon\");\n      });\n    },\n    processEffect(addon) {\n      let id = addon.id;\n      let dataContent = addon.data;\n      let langContent = addon.lang;\n      let fxContent = addon.fx;\n      let processedEffects = this.processedEffects;\n      let commonUniforms = this.commonUniformsToRemove;\n      if (id in processedEffects) return;\n\n      processedEffects[id] = {};\n      let fxArr = fxContent.split(\"\\n\");\n      // trim lines and remove comments\n      fxArr = fxArr.map((line) => {\n        return line\n          .trim()\n          .replace(/\\/\\/.*/, \"\")\n          .trim();\n      });\n      // remove empty lines\n      fxArr = fxArr.filter((line) => {\n        return line.length > 0;\n      });\n\n      // get all lines with precision\n      let precisionLines = fxArr.filter((line) => {\n        return line.startsWith(\"precision\");\n      });\n      // replace all precision for unspecified variables\n      precisionLines.forEach((line) => {\n        let lineA = line.split(\" \");\n        let precision = lineA[1];\n        let type = lineA[2].replace(/;/, \"\");\n        let regex = new RegExp(`(?<!highp |lowp |mediump )${type}`);\n        fxArr = fxArr.map((line) => {\n          return line.replace(regex, `${precision} ${type}`);\n        });\n      });\n      // remove precision lines\n      fxArr = fxArr.filter((line) => {\n        return !line.startsWith(\"precision\");\n      });\n\n      // remove common uniforms\n      fxArr = fxArr.filter((line) => {\n        return !commonUniforms.includes(line);\n      });\n\n      processedEffects[id].uniforms = fxArr.filter((line) => {\n        return line.startsWith(\"uniform\");\n      });\n      // remove uniforms\n      fxArr = fxArr.filter((line) => {\n        return !line.startsWith(\"uniform\");\n      });\n\n      processedEffects[id].uniforms = processedEffects[id].uniforms.map(\n        (line) => {\n          // uniforms look like this \"uniform lowp float width;\"\n          let lineA = line.split(\" \");\n          let name = lineA[lineA.length - 1].replace(\";\", \"\");\n          let newName = `${id}_${name}`;\n          line = line.replace(name, newName);\n          // replace all uses of that uniform with the new name in the main code\n          fxArr = fxArr.map((line) => {\n            return line.replaceAll(\n              new RegExp(`(?<!\\\\w)${name}(?!\\\\w)`, \"g\"),\n              newName\n            );\n          });\n\n          let uniformParam = dataContent.parameters.find(\n            (x) => x.uniform === name\n          );\n          if (uniformParam) {\n            let lang =\n              langContent.text.effects[id.toLowerCase()].parameters[\n                uniformParam.id\n              ];\n            // remove that lang from the lang file\n            delete langContent.text.effects[id.toLowerCase()].parameters[\n              uniformParam.id\n            ];\n            if (uniformParam) {\n              uniformParam.id = `${id}_${uniformParam.id}`;\n              uniformParam.uniform = newName;\n            }\n            // add it back to lang with the correct id\n            langContent.text.effects[id.toLowerCase()].parameters[\n              uniformParam.id\n            ] = lang;\n          } else {\n            console.log(`${id}_${name} not found in data.json`);\n          }\n          return line;\n        }\n      );\n\n      processedEffects[id].defines = fxArr.filter((line) => {\n        return line.startsWith(\"#define\");\n      });\n\n      processedEffects[id].defines = processedEffects[id].defines.map(\n        (line) => {\n          // defines look like this \"#define width 1.0\"\n          let lineA = line.split(\" \");\n          let name = lineA[1];\n          let newName = `${id.toUpperCase()}_${name}`;\n          line = line.replace(name, newName);\n          // replace all uses of that define with the new name in the main code\n          fxArr = fxArr.map((line) => {\n            return line.replaceAll(\n              new RegExp(`(?<!\\\\w)${name}(?!\\\\w)`, \"g\"),\n              newName\n            );\n          });\n          return line;\n        }\n      );\n\n      // remove defines\n      fxArr = fxArr.filter((line) => {\n        return !line.startsWith(\"#define\");\n      });\n      processedEffects[id].rawCode = fxArr.join(\"\\n\");\n\n      // extract all functions\n      let functions = {};\n      let currentFunction = \"\";\n      let currentFunctionLines = [];\n      let functionLineRegex =\n        /^(\\w+) +(\\w+ +)?(\\w+) *\\(((\\w+ +)?(\\w+ +)?(\\w+ *),? *)*\\) *\\{? *$/;\n      let nbOpenBrackets = 0;\n      let isInFunction = false;\n      fxArr.forEach((line) => {\n        if (isInFunction) {\n          currentFunctionLines.push(line);\n          if (line.includes(\"}\")) {\n            nbOpenBrackets--;\n            if (nbOpenBrackets === 0) {\n              isInFunction = false;\n              if (currentFunction !== \"main\") {\n                let newName = `${id}_${currentFunction}`;\n                currentFunctionLines = currentFunctionLines.map((line) => {\n                  return line.replaceAll(currentFunction, newName);\n                });\n                fxArr = fxArr.map((line) => {\n                  return line.replaceAll(currentFunction, newName);\n                });\n                functions[newName] = currentFunctionLines;\n              } else {\n                functions[\"main\"] = currentFunctionLines;\n              }\n              currentFunctionLines = [];\n              currentFunction = \"\";\n            }\n          }\n          if (line.includes(\"{\")) {\n            nbOpenBrackets++;\n          }\n        }\n        if (!isInFunction) {\n          if (line.match(functionLineRegex)) {\n            isInFunction = true;\n            if (line.match(/\\{/g)) nbOpenBrackets++;\n            currentFunction = line.match(functionLineRegex)[3];\n            currentFunctionLines.push(line);\n          }\n        }\n      });\n      // console.log(functions);\n      processedEffects[id].functions = functions;\n\n      // remove all lines that are in functions\n      fxArr = fxArr.filter((line) => {\n        return !Object.keys(functions).some((functionName) => {\n          return functions[functionName].some((functionLine) => {\n            return line === functionLine;\n          });\n        });\n      });\n\n      // trim lines\n      fxArr = fxArr.map((line) => {\n        return line.trim();\n      });\n      // remove empty lines\n      fxArr = fxArr.filter((line) => {\n        return line.length > 0;\n      });\n      // console.log(fxArr);\n      // if fxArr is not empty, it means that there is some code left, warn the user\n      if (fxArr.length > 0) {\n        console.log(`Warning: ${id} has some code left`);\n      }\n    },\n\n    concatEffects(list) {\n      let resultArr = [];\n      let processedEffects = this.processedEffects;\n      let commonUniforms = this.commonUniforms;\n      // append common uniforms\n      resultArr = resultArr.concat(commonUniforms);\n\n      resultArr.push(\"\");\n\n      // append uniforms for all effects\n      list.forEach((id) => {\n        let effect = processedEffects[id];\n        resultArr = resultArr.concat(effect.uniforms);\n        resultArr.push(\"\");\n      });\n\n      // append defines for all effects\n      list.forEach((id) => {\n        let effect = processedEffects[id];\n        resultArr = resultArr.concat(effect.defines);\n        resultArr.push(\"\");\n      });\n\n      // append functions for all effects\n      list.forEach((id) => {\n        let effect = processedEffects[id];\n        Object.keys(effect.functions).forEach((functionName) => {\n          if (functionName === \"main\") {\n            return;\n          }\n          resultArr = resultArr.concat(effect.functions[functionName]);\n          resultArr.push(\"\");\n        });\n      });\n\n      // append main function\n      let isLastEffect = false;\n      let prevEffectFunction = \"\";\n      list.forEach((id, index) => {\n        let effect = processedEffects[id];\n        if (index === list.length - 1) {\n          isLastEffect = true;\n        }\n        let newMain = effect.functions.main;\n        if (prevEffectFunction !== \"\") {\n          // replace \"texture2D(samplerFront\" with a call to the previous function\n          newMain = newMain.map((line) => {\n            return line.replaceAll(\n              \"texture2D(samplerFront,\",\n              `${prevEffectFunction}(`\n            );\n          });\n        }\n        if (!isLastEffect) {\n          // replace main function name with a new name\n          let replaced = false;\n          prevEffectFunction = `${id}_main`;\n          newMain = newMain.map((line) => {\n            if (line.includes(\"main\") && !replaced) {\n              return line.replaceAll(\n                /void main\\([^)]*\\)/g,\n                `mediump vec4 ${prevEffectFunction}(mediump vec2 vTex)`\n              );\n            }\n            return line;\n          });\n          // replace gl_FragColor ?= ? with return\n          newMain = newMain.map((line) => {\n            return line.replaceAll(/gl_FragColor *= */g, `return `);\n          });\n        }\n        resultArr = resultArr.concat(newMain);\n        resultArr.push(\"\");\n      });\n      return resultArr.join(\"\\n\");\n    },\n\n    concatData(list) {\n      let resultData = {\n        \"is-c3-addon\": true,\n        type: \"effect\",\n        version: \"1.0.0.0\",\n        website: \"https://www.construct.net\",\n        documentation: \"https://www.construct.net\",\n        \"file-list\": [\"lang/en-US.json\", \"addon.json\", \"effect.fx\"],\n      };\n      let addons = list.map((id) => this.addons.find((x) => x.id === id));\n      resultData.name = addons.map((addon) => addon.name).join(\" + \");\n      resultData.id = addons.map((addon) => addon.id).join(\"_\");\n      resultData.author = addons.map((addon) => addon.data.author).join(\", \");\n      resultData.description =\n        \"Concat effect of \" + addons.map((addon) => addon.name).join(\", \");\n      // if all categories are the same, use that one, else \"other\"\n      resultData.category = addons\n        .map((addon) => addon.data.category)\n        .reduce((acc, curr) => {\n          if (acc === curr) {\n            return acc;\n          } else {\n            return \"other\";\n          }\n        }, addons[0].data.category);\n      // or all the results\n      resultData[\"blends-background\"] = addons\n        .map((addon) => addon.data[\"blends-background\"])\n        .reduce((acc, curr) => {\n          return acc || curr;\n        }, addons[0].data[\"blends-background\"]);\n      resultData[\"cross-sampling\"] = addons\n        .map((addon) => addon.data[\"cross-sampling\"])\n        .reduce((acc, curr) => {\n          return acc || curr;\n        }, addons[0].data[\"cross-sampling\"]);\n      resultData[\"preserves-opaqueness\"] = addons\n        .map((addon) => addon.data[\"preserves-opaqueness\"])\n        .reduce((acc, curr) => {\n          return acc || curr;\n        }, addons[0].data[\"preserves-opaqueness\"]);\n      resultData.animated = addons\n        .map((addon) => addon.animated)\n        .reduce((acc, curr) => {\n          return acc || curr;\n        }, addons[0].animated);\n      resultData[\"extend-box\"] = addons\n        .map((addon) => addon.data[\"extend-box\"])\n        .reduce((acc, curr) => {\n          return {\n            horizontal: Math.max(acc.horizontal, curr.horizontal),\n            vertical: Math.max(acc.vertical, curr.vertical),\n          };\n        }, addons[0].data[\"extend-box\"]);\n      resultData.parameters = addons\n        .map((addon) => addon.data.parameters)\n        .reduce((acc, curr) => {\n          return acc.concat(curr);\n        }, []);\n      return resultData;\n    },\n\n    concatLang(list) {\n      let resultData = {\n        languageTag: \"en-US\",\n        text: {\n          effects: {},\n        },\n      };\n      let addons = list.map((id) => this.addons.find((x) => x.id === id));\n      let id = addons.map((addon) => addon.id).join(\"_\");\n      resultData.text.effects[id.toLowerCase()] = {\n        name: addons\n          .map((addon) => addon.lang.text.effects[addon.id.toLowerCase()].name)\n          .join(\" + \"),\n        description:\n          \"Concat effect of \" + addons.map((addon) => addon.name).join(\", \"),\n      };\n      let params = {};\n      addons.forEach((addon) => {\n        params = {\n          ...params,\n          ...addon.lang.text.effects[addon.id.toLowerCase()].parameters,\n        };\n      });\n      resultData.text.effects[id.toLowerCase()].parameters = params;\n      return resultData;\n    },\n  },\n};\n</script>\n\n<style>\nhtml,\nbody {\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  overflow: hidden;\n}\n\n.list-group {\n  min-height: 20px;\n}\n.list-group {\n  display: -ms-flexbox;\n  display: -webkit-box;\n  display: flex;\n  -ms-flex-direction: column;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n  flex-direction: column;\n  padding-left: 0;\n  margin-bottom: 20px;\n}\n.list-group-item {\n  cursor: move;\n}\n.list-group-item i {\n  cursor: pointer;\n}\n\n.ghost {\n  opacity: 0.5;\n  background: #c8ebfb;\n}\n.list-group-item {\n  position: relative;\n  display: block;\n  padding: 0.75rem 1.25rem;\n  margin-bottom: -1px;\n  background-color: #fff;\n  border: 1px solid rgba(0, 0, 0, 0.125);\n}\n\n.list-group-item:first-child {\n  border-top-left-radius: 0.25rem;\n  border-top-right-radius: 0.25rem;\n}\n\n.list-group-item:last-child {\n  margin-bottom: 0;\n  border-bottom-right-radius: 0.25rem;\n  border-bottom-left-radius: 0.25rem;\n}\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--13-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--1-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=1d1f654c&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VApp } from 'vuetify/lib/components/VApp';\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VFileInput } from 'vuetify/lib/components/VFileInput';\nimport { VLayout } from 'vuetify/lib/components/VGrid';\nimport { VMain } from 'vuetify/lib/components/VMain';\ninstallComponents(component, {VApp,VBtn,VFileInput,VLayout,VMain})\n","import Vue from 'vue';\nimport Vuetify from 'vuetify/lib/framework';\n\nVue.use(Vuetify);\n\nexport default new Vuetify({\n});\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport vuetify from './plugins/vuetify'\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  vuetify,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n"],"sourceRoot":""}